/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pvs.hwl.hwlclient;

import entity.Word;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.beans.PropertyVetoException;
import java.io.*;
import java.net.URI;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.SwingWorker;
import view.MainView;
import view.QuizView;
import view.TestView;
import view.WordView;

/**
 *
 * @author vincze.attila
 */
public class HWLClientApplication extends javax.swing.JFrame {

    /**
     * Creates new form HWLClientApplication
     */
    private WordView wordView;
    private MainView mainView;
    private QuizView quizView;
    private TestView testView;

    public HWLClientApplication() {
        try {
            initComponents();
            putWindowToScreenCenter();
            mainView = new MainView();
            desktopPane.add(mainView);
            desktopPane.getDesktopManager().activateFrame(mainView);
            mainView.setMaximum(true);
            mainView.setVisible(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(HWLClientApplication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void putWindowToScreenCenter() throws HeadlessException {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(1150, 768);
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width - w) / 2;
        int y = (dim.height - h) / 2;
        this.setLocation(x, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        desktopPane = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel(){
            @Override
            protected void paintComponent(Graphics g) {
                if (!isOpaque()) {
                    super.paintComponent(g);
                    return;
                }

                Graphics2D g2d = (Graphics2D) g;
                int w = getWidth();
                int h = getHeight();

                try {
                    BufferedImage bi = ImageIO.read(getClass().getResourceAsStream("/image/headerbackground-1.png"));
                    g2d.drawImage(bi, 0, 0, w, h, null);
                } catch (IOException ex) {
                    Logger.getLogger(HWLClientApplication.class.getName()).log(Level.SEVERE, null, ex);
                }
                setOpaque(false);
                super.paintComponent(g);
                setOpaque(true);

            }
        };
        jPanel2 = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                if (!isOpaque()) {
                    super.paintComponent(g);
                    return;
                }

                Graphics2D g2d = (Graphics2D) g;
                int w = getWidth();
                int h = getHeight();

                try {
                    BufferedImage bi = ImageIO.read(getClass().getResourceAsStream("/image/ivrit.png"));
                    g2d.drawImage(bi, 0, 0, w, h, null);
                } catch (IOException ex) {
                    Logger.getLogger(HWLClientApplication.class.getName()).log(Level.SEVERE, null, ex);
                }
                setOpaque(false);
                super.paintComponent(g);
                setOpaque(true);

            }
        }
        ;
        jPanel4 = new javax.swing.JPanel();
        hlHebrewOnline = new component.HWLHyperLink();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hebrew Word Learning");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/image/caselist16.png")));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().add(desktopPane, java.awt.BorderLayout.CENTER);

        jPanel1.setBackground(new java.awt.Color(153, 180, 209));
        jPanel1.setPreferredSize(new java.awt.Dimension(191, 100));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jToolBar2.setBackground(new java.awt.Color(153, 180, 209));
        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);
        jToolBar2.setOpaque(false);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/case22.png"))); // NOI18N
        jButton1.setText("Words");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setOpaque(false);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/hospital22.png"))); // NOI18N
        jButton2.setText("Quizes");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setOpaque(false);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/tdsmanager22.png"))); // NOI18N
        jButton3.setText("Tests");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setOpaque(false);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jToolBar2, gridBagConstraints);

        jPanel1.add(jPanel2, java.awt.BorderLayout.LINE_START);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.GridBagLayout());
        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel4.setOpaque(false);
        jPanel4.setLayout(new java.awt.GridBagLayout());

        hlHebrewOnline.setText("www.hebrewonline.eu");
        hlHebrewOnline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hlHebrewOnlineActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(hlHebrewOnline, gridBagConstraints);

        jPanel1.add(jPanel4, java.awt.BorderLayout.LINE_END);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (desktopPane.getSelectedFrame() instanceof WordView) {
            return;
        }

        SwingWorker worker = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {
                getContentPane().setCursor(new Cursor(Cursor.WAIT_CURSOR));
                desktopPane.getSelectedFrame().setCursor(new Cursor(Cursor.WAIT_CURSOR));
                //getGlassPane().setVisible(true);
                if (wordView == null) {
                    wordView = new WordView();
                    desktopPane.add(wordView);
                }
                wordView.setMaximum(true);
                wordView.setVisible(true);
                desktopPane.getDesktopManager().activateFrame(wordView);
                return null;
            }

            @Override
            protected void done() {
                try {
                    super.done();
                    get();
                } catch (InterruptedException ex) {
                    Logger.getLogger(HWLClientApplication.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ExecutionException ex) {
                    Logger.getLogger(HWLClientApplication.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    getContentPane().setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                    desktopPane.getSelectedFrame().setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                    //getGlassPane().setVisible(false);
                }
            }
        };
        worker.execute();

//        try {
//            // TODO add your handling code here:
//
//
//            if (wordView == null) {
//                wordView = new WordView();
//
//                desktopPane.add(wordView);
//            }
//            desktopPane.getDesktopManager().activateFrame(wordView);
//            wordView.setMaximum(true);
//            wordView.setVisible(true);
//        } catch (PropertyVetoException ex) {
//            Logger.getLogger(HWLClientApplication.class.getName()).log(Level.SEVERE, null, ex);
//        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (desktopPane.getSelectedFrame() instanceof QuizView) {
            return;
        }

//        if (testView != null) {
//            try {
//                testView.setMaximum(true);
//            } catch (PropertyVetoException ex) {
//                Logger.getLogger(HWLClientApplication.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            testView.setVisible(true);
//            desktopPane.getDesktopManager().activateFrame(testView);
//            return;
//        }

        SwingWorker worker = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {
                getContentPane().setCursor(new Cursor(Cursor.WAIT_CURSOR));
                desktopPane.getSelectedFrame().setCursor(new Cursor(Cursor.WAIT_CURSOR));
                //getGlassPane().setVisible(true);
                if (quizView == null) {
                    quizView = new QuizView();
                    desktopPane.add(quizView);
                }
                quizView.setMaximum(true);
                quizView.setVisible(true);
                desktopPane.getDesktopManager().activateFrame(quizView);
                return null;
            }

            @Override
            protected void done() {
                try {
                    super.done();
                    get();
                } catch (InterruptedException ex) {
                    Logger.getLogger(HWLClientApplication.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ExecutionException ex) {
                    Logger.getLogger(HWLClientApplication.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    getContentPane().setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                    desktopPane.getSelectedFrame().setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                    //getGlassPane().setVisible(false);
                }
            }
        };
        worker.execute();


//        try {
//            // TODO add your handling code here:
//            if (desktopPane.getSelectedFrame() instanceof QuizView) {
//                return;
//            }
//
//            if (testView == null) {
//                testView = new QuizView();
//
//                desktopPane.add(testView);
//            }
//            desktopPane.getDesktopManager().activateFrame(testView);
//            testView.setMaximum(true);
//            testView.setVisible(true);
//        } catch (PropertyVetoException ex) {
//            Logger.getLogger(HWLClientApplication.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (wordView == null) {
            return;
        }
        Writer writer = null;
        try {
            File fileDir = new File("words.out");
            writer = new BufferedWriter(new OutputStreamWriter(
                    new FileOutputStream(fileDir), "UTF8"));
            PrintWriter out = new PrintWriter(writer);
            for (Word word : wordView.getViewModel().getWordList()) {
                out.println(word.toCSV());
            }
        } catch (IOException ex) {
            Logger.getLogger(HWLClientApplication.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                writer.flush();
                writer.close();
            } catch (IOException ex) {
                Logger.getLogger(HWLClientApplication.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formWindowClosing

    
    private void hlHebrewOnlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hlHebrewOnlineActionPerformed
        // TODO add your handling code here:
        try {
            Desktop.getDesktop().browse( new URI("http://" + hlHebrewOnline.getText()) );
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_hlHebrewOnlineActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (desktopPane.getSelectedFrame() instanceof TestView) {
            return;
        }

        SwingWorker worker = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {
                getContentPane().setCursor(new Cursor(Cursor.WAIT_CURSOR));
                desktopPane.getSelectedFrame().setCursor(new Cursor(Cursor.WAIT_CURSOR));
                //getGlassPane().setVisible(true);
                if (testView == null) {
                    testView = new TestView();
                    desktopPane.add(testView);
                }
                testView.setMaximum(true);
                testView.setVisible(true);
                desktopPane.getDesktopManager().activateFrame(testView);
                return null;
            }

            @Override
            protected void done() {
                try {
                    super.done();
                    get();
                } catch (InterruptedException ex) {
                    Logger.getLogger(HWLClientApplication.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ExecutionException ex) {
                    Logger.getLogger(HWLClientApplication.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    getContentPane().setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                    desktopPane.getSelectedFrame().setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                    //getGlassPane().setVisible(false);
                }
            }
        };
        worker.execute();

    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HWLClientApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HWLClientApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HWLClientApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HWLClientApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new HWLClientApplication().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktopPane;
    private component.HWLHyperLink hlHebrewOnline;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JToolBar jToolBar2;
    // End of variables declaration//GEN-END:variables
}
